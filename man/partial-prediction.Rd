% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/partial-prediction-helpers.R
\name{partial-prediction}
\alias{partial-prediction}
\alias{create_age_grid}
\alias{gg_age_terms_settings}
\alias{pivot_longer_age_preds}
\alias{gg_age_partial_pred_long}
\alias{add_age_partial_sum}
\alias{gg_age_partial_sum}
\title{Helper functions to create partial predictive plots.}
\usage{
create_age_grid(ages)

gg_age_terms_settings(age_predictions_all_settings)

pivot_longer_age_preds(age_predictions)

gg_age_partial_pred_long(age_predictions_long)

add_age_partial_sum(age_predictions_long)

gg_age_partial_sum(age_predictions_long_sum)
}
\arguments{
\item{ages}{vector of integer ages}

\item{age_predictions_all_settings}{output from mapped
\code{predict_individual_terms}.}
}
\value{
data frame with 20 columns plus n rows based on expand.grid
combination of ages. Contains transformed coefficients from ages.
}
\description{
These helper functions exist to make it easier to explore and understand the
impact of each of the covariates used in the conmat GAM model. These were
initially developed for the official Journal of Open Source Software paper
for \code{conmat}, and have been made available for the user, in case it is of
interest. The relevant excerpt from the paper is included in "details",
below. How to use the functions is shown in the examples section below.
}
\details{
\code{conmat} was built to predict at four settings: work, school, home, and
other. One model is fitted for each setting. Each model fitted is a
Poisson generalised additive model (GAM) with a log link function, which
predicts the count of contacts, with an offset for the log of participants.
The model has six covariates to explain six key features of the
relationship between ages, and two optional covariates for attendance
at school or work. The two optional covariates are included depending on
which setting the model is fitted for.

Each cell in the resulting contact matrix (after back-transformation of
the link function), indexed ($i$, $j$), is the predicted number of people
in age group $j$ that a single individual in age group $i$ will have
contact with per day. The sum over all age groups $j$ for a particular age
group $i$ is the predicted total number of contacts per day for each
individual of age group $i$.

The six covariates are: (1) $|i-j|$, (2) $|i-j|^{2}$, (3) $i + j$,
(4) $i \times j$, (5) $\text{max}(i, j)$ and (6) $\text{min}(i, j)$.

These covariates capture typical features of inter-person contact, where
individuals primarily interact with people of similar age (the diagonals
of the matrix), and with grandparents and/or children (the so-called
'wings' of the matrix). The key features of the relationship between the
age groups, represented by spline transformations of the six covariates,
are displayed in the example below for the home setting. The
spline-transformed $|i-j|$ and $|i-j|^{2}$ terms give the strong diagonal
lines modelling people generally living with those of similar age and
the intergenerational effect of parents and (faintly) grandparents with
children. The spline-transformed $\text{max}(i, j)$ and $\text{min}(i, j)$
terms give the higher rates of at-home contact among younger people of
similar ages and with their parents. Visualising the partial predictive
plots for other settings (school, work and other) show patterns that
correspond with real-life situations.
}
\examples{
fit_home <- polymod_setting_models$home
age_grid <- create_age_grid(ages = 1:99)
term_names <- extract_term_names(fit_home)
term_var_names <- clean_term_names(term_names)
age_predictions <- predict_individual_terms(
  age_grid = age_grid,
  fit = fit_home,
  term_names = term_names,
  term_var_names = term_var_names
)

age_predictions_all_settings <- map_dfr(
  .x = polymod_setting_models,
  .f = function(x) {
    predict_individual_terms(
      age_grid = age_grid,
      fit = x,
      term_names = term_names,
      term_var_names = term_var_names
    )
  },
  .id = "setting"
)

plot_age_term_settings <- gg_age_terms_settings(age_predictions_all_settings)
age_predictions_long <- pivot_longer_age_preds(age_predictions)

library(ggplot2)
plot_age_predictions_long <- gg_age_partial_pred_long(age_predictions_long) +
  coord_equal() +
  labs(
    x = "Age from",
    y = "Age to"
  ) + 
  theme(
    legend.position = "bottom",
    axis.text = element_text(size = 6),
    panel.spacing = unit(x = 1, units = "lines")
  ) +
  scale_x_continuous(expand = c(0,0)) +
  scale_y_continuous(expand = c(0,0)) +
  expand_limits(x = c(0, 100), y = c(0, 100))

age_predictions_long_sum <- add_age_partial_sum(age_predictions_long)
plot_age_predictions_sum <- gg_age_partial_sum(age_predictions_long_sum) + coord_equal() +
  labs(x = "Age from",
       y = "Age to") +
  theme(
    legend.position = "bottom"
  ) +
  scale_x_continuous(expand = c(0,0)) +
  scale_y_continuous(expand = c(0,0)) +
  expand_limits(x = c(0, 100), y = c(0, 100))

plot_age_term_settings
plot_age_predictions_long
plot_age_predictions_sum
library(purrr)
fit_home <- polymod_setting_models$home
age_grid <- create_age_grid(ages = 1:99)
term_names <- extract_term_names(fit_home)
term_var_names <- clean_term_names(term_names)
age_predictions <- predict_individual_terms(
  age_grid = age_grid,
  fit = fit_home,
  term_names = term_names,
  term_var_names = term_var_names
)

age_predictions_all_settings <- map_dfr(
  .x = polymod_setting_models,
  .f = function(x) {
    predict_individual_terms(
      age_grid = age_grid,
      fit = x,
      term_names = term_names,
      term_var_names = term_var_names
    )
  },
  .id = "setting"
)

plot_age_term_settings <- gg_age_terms_settings(age_predictions_all_settings)

plot_age_term_settings
}
